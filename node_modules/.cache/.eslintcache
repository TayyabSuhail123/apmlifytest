[{"/home/tayyab/thesis/dockerCompose/front-end/src/index.js":"1","/home/tayyab/thesis/dockerCompose/front-end/src/App.js":"2","/home/tayyab/thesis/dockerCompose/front-end/src/reportWebVitals.js":"3"},{"size":500,"mtime":1637777735303,"results":"4","hashOfConfig":"5"},{"size":3003,"mtime":1637789527323,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1637777735303,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"6l2yq8",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/tayyab/thesis/dockerCompose/front-end/src/index.js",[],["16","17"],"/home/tayyab/thesis/dockerCompose/front-end/src/App.js",["18","19","20"],"import './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport { Table, Tag, Space } from 'antd';\n\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: 'Manufacturer',\n    dataIndex: 'manufacturer',\n    key: 'manufacturer',\n  },\n  {\n    title: 'description',\n    dataIndex: 'description',\n    key: 'description',\n  },\n\n \n];\n\n\n\n\nclass App extends React.Component {\n\n  \n\n\n   componentDidMount()\n   {\n    \n    this.getAllCars();\n   }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {name: '',desc:'',type:'',fuelType:'',manu:'',data:[]};\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  \n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getAllCars()\n  {\n    \n    axios.get(`http://localhost:3000/cars`)\n    .then(res => {\n      debugger;\n      const cardata = res.data.Items;\n      this.setState({data:[]});\n      this.setState({data:cardata});\n\n    })\n  }\n\n  handleSubmit(event) {\n    debugger;\n    event.preventDefault();\n   \n    const cardata = { \n      name:this.state.name,\n      desc:this.state.desc,\n      typefuel:this.state.fuelType,\n      type:this.state.type,\n      manu:this.state.manu,\n     };\n\n     debugger;\n\n\n    axios.put('http://localhost:3000/cars', cardata)\n    .then(res => {\n      debugger;\n      if(res.status===202)\n      {\n        this.getAllCars();\n       alert(\"Car added to db\");\n       this.setState({\n        name: '',desc:'',type:'',fuelType:'',manu:''\n      });\n      }\n      \n    })\n\n  \n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Add Car</h1>\n        <form onSubmit={this.handleSubmit}>\n    <label>\n      Name:\n      <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} />\n    </label>\n    <br></br>\n    <label>\n      Desc:\n      <input type=\"text\" name=\"desc\" value={this.state.desc} onChange={this.handleInputChange}  />\n    </label>\n    <br></br>\n    <label>\n      Type:\n      <input type=\"text\" name=\"type\" value={this.state.type} onChange={this.handleInputChange} />\n    </label>\n    <br></br>\n    <label>\n      fuelType:\n      <input type=\"text\" name=\"fuelType\" value={this.state.fuelType} onChange={this.handleInputChange} />\n    </label>\n    <br></br>\n    <label>\n    manufacturer:\n      <input type=\"text\" name=\"manu\"  value={this.state.manu} onChange={this.handleInputChange}/>\n    </label>\n    <input type=\"submit\" value=\"Submit\" />\n  </form>\n<br></br>\n<br></br>\n  <Table columns={columns} dataSource={this.state.data}></Table>\n        </header>\n      </div>\n    );\n\n    \n  }\n  \n}\n\nexport default App;\n","/home/tayyab/thesis/dockerCompose/front-end/src/reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":4,"column":17,"nodeType":"27","messageId":"28","endLine":4,"endColumn":20},{"ruleId":"25","severity":1,"message":"29","line":4,"column":22,"nodeType":"27","messageId":"28","endLine":4,"endColumn":27},{"ruleId":"30","severity":1,"message":"31","line":12,"column":21,"nodeType":"32","endLine":12,"endColumn":24},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]